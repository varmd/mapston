--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -226,13 +226,10 @@
     list(APPEND qt_components Widgets)
   endif()
   if (NOT SKIP_DESKTOP)
-    list(APPEND qt_components Gui Xml Svg)
+    list(APPEND qt_components Gui Xml OpenGL OpenGLWidgets)
   endif()
   # PATHS are hard-coded hints where to look for qt5 in addition to other places.
-  find_package(Qt5 COMPONENTS REQUIRED ${qt_components} PATHS /usr/local/opt/qt@5)
-  if (Qt5_VERSION VERSION_LESS 5.5.0)
-    message(FATAL_ERROR "Minimum supported Qt5 version is 5.5")
-  endif()
+  find_package(Qt6 COMPONENTS REQUIRED ${qt_components} PATHS /usr/local/opt/qt@5)
 endif()
 
 find_library(LIBZ NAMES z)
--- a/qt/CMakeLists.txt
+++ b/qt/CMakeLists.txt
@@ -3,5 +3,5 @@
 project(desktop)
 
-QT5_ADD_RESOURCES(RES_SOURCES res/resources.qrc)
+QT6_ADD_RESOURCES(RES_SOURCES res/resources.qrc)
 
 set(SRC
--- a/qt/qt_common/CMakeLists.txt
+++ b/qt/qt_common/CMakeLists.txt
@@ -1,6 +1,6 @@
 project(qt_common)
 
-QT5_ADD_RESOURCES(RESOURCES res/resources_common.qrc)
+QT6_ADD_RESOURCES(RESOURCES res/resources_common.qrc)
 
 set_property(SOURCE qrc_resources_common.cpp PROPERTY SKIP_AUTOGEN ON)
 
@@ -33,6 +33,6 @@
 
 target_link_libraries(${PROJECT_NAME}
   map
-  Qt5::Gui
-  Qt5::Widgets
+  Qt6::Gui
+  Qt6::Widgets
 )
--- a/qt/build_style/build_common.cpp
+++ b/qt/build_style/build_common.cpp
@@ -6,7 +6,7 @@
 #include <QtCore/QDir>
 #include <QtCore/QFile>
 #include <QtCore/QProcessEnvironment>
-#include <QtCore/QRegExp>
+
 
 #include <exception>
 
@@ -88,6 +88,7 @@
 QString GetExternalPath(QString const & name, QString const & primaryPath,
                         QString const & secondaryPath)
 {
+  #if 0
   QString const resourceDir = GetPlatform().ResourcesDir().c_str();
   QString path = JoinPathQt({resourceDir, primaryPath, name});
   if (!QFileInfo::exists(path))
@@ -103,6 +104,7 @@
       path = JoinPathQt({appPath.left(i), name});
   }
   return path;
+  #endif
 }
 
 QString GetProtobufEggPath()

--- a/qt/draw_widget.cpp
+++ b/qt/draw_widget.cpp
@@ -42,7 +42,6 @@
 #include <QtGui/QGuiApplication>
 #include <QtGui/QMouseEvent>
 #include <QtWidgets/QApplication>
-#include <QtWidgets/QDesktopWidget>
 #include <QtWidgets/QDialogButtonBox>
 #include <QtWidgets/QMenu>
 #include <QtWidgets/QHeaderView>

--- a/qt/mainwindow.cpp
+++ b/qt/mainwindow.cpp
@@ -34,8 +34,7 @@
 #endif // BUILD_DESIGNER
 
 #include <QtGui/QCloseEvent>
-#include <QtWidgets/QAction>
-#include <QtWidgets/QDesktopWidget>
+#include <QAction>
 #include <QtWidgets/QDockWidget>
 #include <QtWidgets/QFileDialog>
 #include <QtWidgets/QHBoxLayout>

--- a/qt/qt_common/map_widget.cpp
+++ b/qt/qt_common/map_widget.cpp
@@ -16,12 +16,12 @@
 #include <QtGui/QWindow>
 #include <QtGui/QMouseEvent>
 #include <QtGui/QOpenGLFunctions>
-#include <QtGui/QOpenGLShaderProgram>
-#include <QtWidgets/QAction>
+#include <QOpenGLShaderProgram>
+#include <QAction>
 #include <QtWidgets/QMenu>
 
-#include <QtGui/QOpenGLBuffer>
-#include <QtGui/QOpenGLVertexArrayObject>
+#include <QOpenGLBuffer>
+#include <QOpenGLVertexArrayObject>
 
 
 
@@ -434,7 +434,7 @@
     return;
 
   QOpenGLWidget::wheelEvent(e);
-  m_framework.Scale(exp(e->delta() / 360.0), m2::PointD(L2D(e->x()), L2D(e->y())), false);
+  m_framework.Scale(exp( e->angleDelta().y() / 360.0), m2::PointD(L2D(e->globalPosition().x()), L2D(e->globalPosition().y())), false);
 }
 
 search::ReverseGeocoder::Address GetFeatureAddressInfo(Framework const & framework,

--- a/qt/qt_common/map_widget.hpp
+++ b/qt/qt_common/map_widget.hpp
@@ -13,7 +13,7 @@
 #include "indexer/feature.hpp"
 
 #include <QtCore/QTimer>
-#include <QtWidgets/QOpenGLWidget>
+#include <QOpenGLWidget>
 
 #include <memory>
 

--- a/qt/qt_common/qtoglcontext.hpp
+++ b/qt/qt_common/qtoglcontext.hpp
@@ -3,8 +3,8 @@
 #include "drape/oglcontext.hpp"
 
 #include <QtGui/QOffscreenSurface>
-#include <QtGui/QOpenGLFramebufferObject>
-#include <QtGui/QOpenGLContext>
+#include <QOpenGLFramebufferObject>
+#include <QOpenGLContext>
 
 #include <atomic>
 #include <memory>

--- a/qt/qt_common/qtoglcontextfactory.hpp
+++ b/qt/qt_common/qtoglcontextfactory.hpp
@@ -3,8 +3,8 @@
 #include "drape/graphics_context_factory.hpp"
 #include "qt/qt_common/qtoglcontext.hpp"
 
-#include <QtGui/QOpenGLContext>
-#include <QtGui/QOpenGLFramebufferObject>
+#include <QOpenGLContext>
+#include <QOpenGLFramebufferObject>
 
 #include <memory>
 
--- a/qt/screenshoter.hpp
+++ b/qt/screenshoter.hpp
@@ -6,7 +6,7 @@
 
 #include "geometry/rect2d.hpp"
 
-#include <QtWidgets/QOpenGLWidget>
+#include <QOpenGLWidget>
 
 #include <list>
 #include <string>

